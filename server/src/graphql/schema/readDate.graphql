# read date data type
type ReadDate {
  id: ID!
  bookID: ID!
  books: Book!
  readEnd: Date!
}

# read books data + total count type
type ReadBooksResponse {
  totalCount: Int!
  readDate: [ReadDate!]!
}

# input data for add reread book
input ReadDateInput {
  bookID: ID!
  readEnd: Date!
}

extend type Query {
  # Get a list of read books, that were sorted by date
  getAllBooksByDate(limit: Int = 100, page: Int = 1): ReadBooksResponse!

  # Get a list of read books read in specific year
  getAllBooksBySpecificDate(year: Int): [ReadDate!]!
}

extend type Mutation {
  # Add new date for reread book
  addReadDate(input: ReadDateInput!): ReadDate!
}
